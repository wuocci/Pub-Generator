{"version":3,"sources":["other/beers3.png","components/Header.js","components/PubDialog.js","components/Notification.js","components/Map.js","helpers/helpers.js","components/PubResults.js","components/ButtonPub.js","components/SelectDistrict.js","other/skyline-tampere.png","components/Footer.js","App.js","index.js"],"names":["Header","className","src","HeaderImg","alt","onClick","window","location","reload","Typography","variant","PubDialog","showDialog","pubName","handleClose","current","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","encodePubName","includes","substring","encodedPub","encodeURIComponent","color","Notification","useState","setOpen","Collapse","in","Alert","severity","action","IconButton","size","fontSize","mapboxgl","accessToken","Map","pubsToShow","error","setError","mapContainer","useRef","map","centerToHervanta","encodedLocations","hervantaCenter","category","length","useEffect","container","style","center","zoom","console","log","locations","pub","push","address","encodeLocations","forEach","element","index","fetchURL","a","fetch","resp","json","data","coordinates","features","popup","Popup","offset","setMaxWidth","setText","name","Marker","scale","setLngLat","setPopup","addTo","fetchData","addControl","FullscreenControl","NavigationControl","ref","PubResults","mapVisible","setMapVisible","handleDialogChange","event","target","textContent","ind","textDecoration","width","marginTop","ButtonPub","districtValue","district","setDistrict","showResults","setShowResults","progress","setProgress","loading","setLoading","timer","tour","LinearProgressWithLabel","props","LinearProgress","Math","round","value","setInterval","oldProgress","diff","random","min","clearTimeout","handleClick","scrollTo","buttonType","pubList","isTour","filteredPubs","PubList","filter","pubArray","pubToAdd","floor","getPubs","setTimeout","SelectDistrict","selectedDistrict","FormControl","InputLabel","htmlFor","NativeSelect","onChange","e","handleChange","inputProps","Footer","mainStreetPubs","sort","pubToCompare","localeCompare","tamKalPubs","herwoodPubs","BackgroundImg","List","ListSubheader","disableSticky","ListItem","ListItemText","disableTypography","App","React1","require","ReactDOM","render","document","getElementById"],"mappings":"q7NAAe,MAA0B,mC,OCc1BA,EAVA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,qBAAKC,IAAKC,EAAWC,IAAI,8BAA8BC,QAAS,kBAAKC,OAAOC,SAASC,YACrF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2CACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,4C,iGC+CGC,EA/CG,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QACtBC,EAAc,WAChBF,EAAWG,SAAU,GAgBzB,OACI,qBAAKd,UAAU,SAAf,SACI,eAACe,EAAA,EAAD,CAAQC,KAAML,EAAWG,QACjBG,QAASJ,EACT,kBAAgB,4BAFxB,UAGI,eAACK,EAAA,EAAD,CAAaC,GAAG,eAAhB,2CAA2DP,EAAQE,QAAnE,QACA,cAACM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAmBF,GAAG,qBAAtB,iDAIJ,eAACG,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAQnB,QAzBM,WACtBO,EAAWG,SAAU,EACrB,IAAIU,EAAgBZ,EAAQE,QAGR,CAAC,IAAK,IAAK,IAAK,IAAK,KACxBW,SAASD,EAAc,MACpCA,EAAgBA,EAAcE,UAAU,IAE5C,IAAIC,EAAaC,mBAAmBJ,GACpCnB,OAAOW,KAAK,mCAAqCW,EAAa,aAgB9C3B,UAAU,gBACVS,QAAQ,WACRoB,MAAM,UAHd,iBAMA,cAACN,EAAA,EAAD,CAAQnB,QAASS,EACTb,UAAU,gBACVS,QAAQ,WACRoB,MAAM,YAHd,4B,sFCbDC,EA1BM,WACjB,MAAwBC,oBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,OACI,8BACE,cAACC,EAAA,EAAD,CAAUC,GAAIlB,EAAd,SACE,cAACmB,EAAA,EAAD,CAAOC,SAAS,QAChBC,OACI,cAACC,EAAA,EAAD,CACA,aAAW,QACXT,MAAM,UACNU,KAAK,QACLnC,QAAS,WACL4B,GAAQ,IALZ,SAQA,cAAC,IAAD,CAAWQ,SAAS,cAVxB,uD,cCLZC,IAASC,YAAc,2FAGvB,IAgGeC,EAhGH,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACV,EAA0Bb,mBAAS,MAAnC,mBAAOc,EAAP,KAAcC,EAAd,KACMC,EAAeC,iBAAO,MACtBC,EAAMD,iBAAO,MACbE,EAAmBF,kBAAO,GAC1BG,EAAmBH,iBAAO,IAC1BI,EAAiB,CAAC,QAAS,SAgFjC,OAxEsC,YAAnCR,EAAW9B,QAAQ,GAAGuC,UAGjBT,EAAW9B,QAAQ,GAAGwC,OAAS,GAA2C,YAAtCV,EAAW9B,QAAQ,GAAG,GAAGuC,YAFjEH,EAAiBpC,SAAU,GAU/ByC,qBAAU,WAENN,EAAInC,QAAU,IAAI2B,IAASE,IAAI,CAC3Ba,UAAWT,EAAajC,QACxB2C,MAAO,kCAEPC,OAAQR,EAAiBpC,QAASsC,EAAiB,CAAC,QAAS,SAC7DO,KAAM,KAUVR,EAAiBrC,QCnBM,SAAC8B,GAC5BgB,QAAQC,IAAIjB,GACZ,IAAIkB,EAAY,GAShB,OARGlB,EAAW,GAAGU,OAAS,EACtBV,EAAW,GAAGK,KAAI,SAAAc,GAAG,OACjBD,EAAUE,KAAKpC,mBAAmBmC,EAAIE,aAI1CH,EAAUE,KAAKpC,mBAAmBgB,EAAW,GAAGqB,UAE7CH,EDQwBI,CAAgBtB,EAAW9B,SAEtDqC,EAAiBrC,QAAQqD,SAAQ,SAACC,EAASC,GAGvC,IAAIC,EArCF,qDAqCmBF,EApCd,4CAoCmC3B,IAASC,aACpC,uCAAG,kCAAA6B,EAAA,+EAESC,MAAMF,GAFf,cAEJG,EAFI,gBAGSA,EAAKC,OAHd,OAGJC,EAHI,OAIJC,EAAcD,EAAKE,SAAS,GAAGnB,OAGjCoB,EAAQ,IAAIrC,IAASsC,MAAM,CAAEC,OAAQ,KACpCC,YAAY,SACZC,QAAQtC,EAAW9B,QAAQ,GAAGwC,OAAS,EACvCe,EAAO,EAAK,KAAOzB,EAAW9B,QAAQ,GAAGuD,GAAOc,KAAOvC,EAAW9B,QAAQuD,GAAOc,MAItF,IAAI1C,IAAS2C,OAAO,CACpBvD,MAAO,UACPwD,MAAO,MAEFC,UAAU,CAACV,EAAY,GAAIA,EAAY,KACvCW,SAAST,GACTU,MAAMvC,EAAInC,SApBL,kDAyBVgC,EAAS,EAAD,IAzBE,0DAAH,qDA4Bf2C,MAIJxC,EAAInC,QAAQ4E,WAAW,IAAIjD,IAASkD,mBACpC1C,EAAInC,QAAQ4E,WAAW,IAAIjD,IAASmD,kBAAqB,eAE1D,IAIC,8BACc,MAAT/C,EACD,cAAC,EAAD,IACA,qBAAKgD,IAAK9C,EAAc/C,UAAU,qBEvB/B8F,EAtEI,SAAC,GAAkB,IAAjBlD,EAAgB,EAAhBA,WACjB,EAAoCb,oBAAS,GAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KACMrF,EAAaqC,kBAAO,GACpBpC,EAAUoC,iBAAO,IAEjBiD,EAAqB,SAACC,GACxBvF,EAAWG,SAAU,EACrBF,EAAQE,QAAUoF,EAAMC,OAAOC,aAGnC,OACI,sBAAKpG,UAAU,cAAf,UACK4C,EAAW9B,QAAQ,GAAGwC,OAAS,EAChC,sBAAKtD,UAAU,WAAf,UACCW,GAAc,cAAC,EAAD,CAAWA,WAAYA,EACVC,QAASA,IAChCgC,EAAW9B,QAAQ,GAAGmC,KAAI,SAACc,EAAKsC,GAAN,OACnB,gCACI,eAAC7F,EAAA,EAAD,CAAYqB,MAAM,UACNpB,QAAQ,KACRL,QAAS6F,EACTjG,UAAU,gBACVyD,MAAO,CAAC6C,eAAgB,YAChBC,MAAO,QACPC,UAAW,SAN/B,UAOSH,EAAK,EAPd,KAOoBtC,EAAIoB,QAExB,4BAAIpB,EAAIE,YAVFF,EAAIoB,YAgB1B,sBAAKnF,UAAU,cAAf,UACMW,GAAc,cAAC,EAAD,CAAWA,WAAYA,EACXC,QAASA,IACtC,cAACJ,EAAA,EAAD,CAAYqB,MAAM,UACLpB,QAAQ,KACRL,QAAS6F,EACTjG,UAAU,mBACVyD,MAAO,CAAC6C,eAAgB,YAChBC,MAAO,SAL5B,SAMM3D,EAAW9B,QAAQ,GAAGqE,OAE3B,cAAC3E,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BmC,EAAW9B,QAAQ,GAAGmD,aAIrD8B,EAOF,sBAAK/F,UAAU,UAAf,UACI,cAAC,EAAD,CAAK4C,WAAYA,IACjB,cAACrB,EAAA,EAAD,CAAQnB,QAAS,kBAAM4F,GAAeD,IAC9BtC,MAAO,CAAC6C,eAAgB,aADhC,+BARA,cAAC/E,EAAA,EAAD,CAAQnB,QAAS,kBAAM4F,GAAeD,IACtCtC,MAAO,CAAC6C,eAAgB,YAChB9D,SAAU,QAFlB,sC,SCsFDiE,EArIG,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAChB,EAAgC3E,mBAAS,IAAzC,mBAAO4E,EAAP,KAAiBC,EAAjB,KACA,EAAsC7E,oBAAS,GAA/C,mBAAO8E,EAAP,KAAoBC,EAApB,KACA,EAAgC/E,mBAAS,GAAzC,mBAAOgF,EAAP,KAAiBC,EAAjB,KACA,EAA8BjF,oBAAS,GAAvC,mBAAOkF,EAAP,KAAgBC,EAAhB,KACMtE,EAAaI,iBAAO,IACpBmE,EAAQnE,mBACRoE,EAAOpE,mBAsCb,SAASqE,EAAwBC,GAC7B,OACI,sBAAKtH,UAAU,kBAAf,UACA,cAACuH,EAAA,EAAD,aAAgB9G,QAAQ,eAAkB6G,IACxC,cAAC9G,EAAA,EAAD,CAAYC,QAAQ,YAAYoB,MAAM,gBAAtC,mBAA0D2F,KAAKC,MAC7DH,EAAMI,OADR,kDAtCVnE,qBAAU,WACgB,MAAlBmD,EACCE,EAAY,cAEU,MAAlBF,EACLE,EAAY,UAEU,MAAlBF,GACJE,EAAY,aAEjB,CAACF,IAIJnD,qBAAU,WACN,IAAM4D,EAAQQ,aAAY,WACtBX,GAAY,SAACY,GACX,GAAoB,MAAhBA,EACF,OAAO,EAET,IAAMC,EAAuB,GAAhBL,KAAKM,SAClB,OAAON,KAAKO,IAAIH,EAAcC,EAAM,UAErC,KAEL,OAAO,WACLG,aAAab,EAAMrG,YAEpB,IAmBL,IAAMmH,EAAc,SAAC/B,GACjB7F,OAAO6H,SAAS,EAAG,KAChBtF,EAAW9B,QAAQwC,OAAS,IAC3BV,EAAW9B,QAAU,IAEzBgG,GAAe,GAIf,IAAMqB,EAAajC,EAAMC,OAAOC,YAWhC,GATIgB,EAAKtG,QADS,iBAAfqH,GAUClB,EAAQ,CAER,IAAMmB,EF9EK,SAACzB,EAAU0B,GAC9B,IAAMC,EAAeC,EAAQC,QAAO,SAAAzE,GAAG,OAAIA,EAAIV,WAAasD,KAC5D,IAAc,IAAX0B,EAAgB,CAEf,IADA,IAAII,EAAW,GACTA,EAASnF,OAAS,GAAE,CACxB,IAAIoF,EAAWJ,EAAad,KAAKmB,MAAMnB,KAAKM,SAAWQ,EAAahF,SAChEmF,EAAShH,SAASiH,IACpBD,EAASzE,KAAK0E,GAGnB,OAAOD,EAGN,OAAOH,EAAad,KAAKmB,MAAMnB,KAAKM,SAAWQ,EAAahF,SEiExCsF,CAAQjC,EAAUS,EAAKtG,SACvC8B,EAAW9B,QAAQkD,KAAKoE,GACxBlB,GAAW,GACXF,EAAY,IACZG,EAAMrG,QAAUT,OAAOwI,YAAW,WAC9B/B,GAAe,GACfI,GAAW,KACZ,OAQX,OAAIL,GAAgBI,EAaZA,IAAYJ,EAEZ,qBAAK7G,UAAU,kBAAf,SACI,cAACqH,EAAD,CAAyBK,MAAOX,MAOpC,sBAAK/G,UAAU,UAAf,UACI,cAAC,EAAD,CAAY4C,WAAYA,IACxB,sBAAK5C,UAAU,UAAf,UACA,cAACuB,EAAA,EAAD,CAAQd,QAAQ,YAAYT,UAAU,yBAAwBI,QAAS6H,EAAvE,0BAGI,cAAC1G,EAAA,EAAD,CAAQd,QAAQ,YAAYT,UAAU,yBAA0BI,QAAS6H,EAAzE,uCA3BR,sBAAKjI,UAAU,UAAf,UACI,cAACuB,EAAA,EAAD,CAAQd,QAAQ,YAAYT,UAAU,yBAAyBI,QAAS6H,EAAxE,0BAGA,cAAC1G,EAAA,EAAD,CAAQd,QAAQ,YAAYT,UAAU,yBAAyBI,QAAS6H,EAAxE,qCCjEDa,EArCQ,WACnB,MAAwC/G,mBAAS,KAAjD,mBAAOgH,EAAP,KAAyBnC,EAAzB,KASA,OACI,gCACI,qBAAK5G,UAAU,cAAf,SACA,eAACgJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,yBAApB,6BACA,eAACC,EAAA,EAAD,CACAhI,GAAI,SACJuG,MAAOqB,EACPK,SAAU,SAACC,GAAD,OAbD,SAACnD,GAClB,IAAMS,EAAWT,EAAMC,OAAOuB,MAC9Bd,EAAYD,GAWa2C,CAAaD,IAC9BE,WAAY,CACRpE,KAAM,WACNhE,GAAI,0BANR,UASI,wBAAQuG,MAAO,EAAf,2BACA,wBAAQA,MAAO,EAAf,8BACA,wBAAQA,MAAO,EAAf,8BAIR,8BACI,cAAC,EAAD,CAAWhB,cAAeqC,UCtC3B,MAA0B,4C,oCC0E1BS,EA9DA,WAKX,IAAMC,EAAiBlB,EAClBC,QAAO,SAAAzE,GAAG,MAAqB,eAAjBA,EAAIV,YAClBqG,MAAK,SAAC3F,EAAK4F,GAAN,OAAuB5F,EAAIoB,KAAKyE,cAAcD,EAAaxE,SAC/D0E,EAAatB,EACdC,QAAO,SAAAzE,GAAG,MAAqB,WAAjBA,EAAIV,YAClBqG,MAAK,SAAC3F,EAAK4F,GAAN,OAAuB5F,EAAIoB,KAAKyE,cAAcD,EAAaxE,SAC/D2E,EAAcvB,EACfC,QAAO,SAAAzE,GAAG,MAAoB,YAAjBA,EAAIV,YACjBqG,MAAK,SAAC3F,EAAK4F,GAAN,OAAuB5F,EAAIoB,KAAKyE,cAAcD,EAAaxE,SAGrE,OACI,sBAAKnF,UAAU,SAAf,UACI,qBAAKC,IAAK8J,EAAe5J,IAAI,gDAE7B,sBAAKH,UAAU,cAAf,UACI,cAACQ,EAAA,EAAD,CAAYR,UAAU,sBAAqBS,QAAQ,QAAnD,4HAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,iIAIA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAAyB,qDAEzB,eAACuJ,EAAA,EAAD,CAAMhK,UAAU,mBAAhB,UAEI,eAACiK,EAAA,EAAD,CAAeC,eAAe,EAAMrI,MAAM,UAA1C,4BAAiE4H,EAAenG,OAAhF,OAGCmG,EAAexG,KAAI,SAACc,GAAD,OAChB,cAACoG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAcC,mBAAmB,EAAjC,SAAwCtG,EAAIoB,QADjCpB,EAAIoB,SAKvB,eAAC8E,EAAA,EAAD,CAAeC,eAAe,EAAMrI,MAAM,UAA1C,+BAAuEgI,EAAWvG,OAAlF,OAECuG,EAAW5G,KAAI,SAACc,GAAD,OACZ,cAACoG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAcC,mBAAmB,EAAjC,SAAwCtG,EAAIoB,QADjCpB,EAAIoB,SAKvB,eAAC8E,EAAA,EAAD,CAAeC,eAAe,EAAMrI,MAAM,UAA1C,uBAA+DiI,EAAYxG,OAA3E,OAECwG,EAAY7G,KAAI,SAACc,GAAD,OACb,cAACoG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAcC,mBAAmB,EAAjC,SAAwCtG,EAAIoB,QADjCpB,EAAIoB,mBC/C5BmF,MAVf,WACE,OACE,sBAAKtK,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCRRK,OAAOkK,OAASC,EAAQ,GACxBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.66d84c56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/beers3.48da99b6.png\";","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport HeaderImg from '../other/beers3.png'\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"header\">\r\n            <img src={HeaderImg} alt=\"Logo with three beers on it\" onClick={()=> window.location.reload()}></img>\r\n            <Typography variant=\"h1\">Tampereen kapakkageneraattori</Typography>\r\n            <Typography variant=\"body1\">kaikkien janoisten sankari</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\n\r\nconst PubDialog = ({showDialog, pubName}) => {  \r\n    const handleClose = () => {\r\n        showDialog.current = false\r\n    };\r\n\r\n    const showSearchResults = () => {\r\n        showDialog.current = false\r\n        var encodePubName = pubName.current\r\n\r\n        //remove number from the google search with this \"wooden-leg\" -method :D \r\n        var listOfNumbers = [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n        if(listOfNumbers.includes(encodePubName[0])) {\r\n            encodePubName = encodePubName.substring(3)\r\n        }\r\n        var encodedPub = encodeURIComponent(encodePubName)\r\n        window.open(\"https://www.google.com/search?q=\" + encodedPub + \" Tampere\")\r\n    }\r\n  \r\n    return(\r\n        <div className=\"dialog\">\r\n            <Dialog open={showDialog.current} \r\n                    onClose={handleClose} \r\n                    aria-labelledby=\"make-google-search-dialog\">\r\n                <DialogTitle id=\"dialog-title\">Hae lisätietoja kapakasta: {pubName.current} ?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"dialog-description\">\r\n                        (Avautuu uudelle välilehdelle)\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={showSearchResults} \r\n                        className=\"search-button\"\r\n                        variant=\"outlined\" \r\n                        color=\"primary\">\r\n                    Hae\r\n                </Button>\r\n                <Button onClick={handleClose} \r\n                        className=\"return-button\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\">\r\n                    Palaa\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default PubDialog;","import React, {useState} from 'react'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst Notification = () => {\r\n    const [open, setOpen] = useState(true);\r\n    return(\r\n        <div>\r\n          <Collapse in={open}>\r\n            <Alert severity=\"error\"\r\n            action={\r\n                <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    setOpen(false);\r\n                }}\r\n                >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n            }\r\n            >\r\n            Huppista! Virhe karttaa ladattaessa.\r\n            </Alert>\r\n        </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useRef, useEffect, useState} from 'react'\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport Notification from './Notification';\r\nimport { encodeLocations } from '../helpers/helpers'\r\n\r\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\nmapboxgl.accessToken = \"pk.eyJ1Ijoid3VvY2NpIiwiYSI6ImNrZzd6cTRsODBja20yd3FvdG1lc2I5b2kifQ.w-yWhkZL-CVnRSIqkUhEag\"\r\n\r\n\r\nconst Map = ({pubsToShow}) => {\r\n    const [error, setError] = useState(null);\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const centerToHervanta = useRef(false) // boolean for centering the map to hervanta\r\n    const encodedLocations = useRef([]);\r\n    const hervantaCenter = [23.8513, 61.4497]\r\n\r\n\r\n    // API stuff\r\n    var URL = 'https://api.mapbox.com/geocoding/v5/mapbox.places/'\r\n    var settings = '.json?proximity=23.75, 61.5&access_token='\r\n  \r\n    // first check if the pubs are located in hervanta\r\n    if(pubsToShow.current[0].category === \"HerWood\"){\r\n        centerToHervanta.current = true;\r\n    }\r\n    else if(pubsToShow.current[0].length > 1 && pubsToShow.current[0][0].category === \"HerWood\"){\r\n        centerToHervanta.current = true;\r\n    }\r\n\r\n\r\n    /*\r\n     // initialize map when component mounts\r\n    */  \r\n    useEffect(() => {\r\n        // map init\r\n        map.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/dark-v10',\r\n            // change the center of the map accordingly (if hervanta)\r\n            center: centerToHervanta.current? hervantaCenter : [23.7756, 61.5008], \r\n            zoom: 12\r\n        });\r\n\r\n         /* \r\n        // 1. encode the URL to match to API:s formatting\r\n        // style by calling the helper function encodeLocations().\r\n        // 2. make the requests for the geocodes from the API\r\n        // based on the encoded addresses.\r\n        // 3. add a marker in the spot. \r\n        */ \r\n        encodedLocations.current = encodeLocations(pubsToShow.current);\r\n        // fetch the data from the API\r\n        encodedLocations.current.forEach((element, index) =>  {\r\n\r\n        // declare the full URL to fetch (easier to comprehend)\r\n            var fetchURL = URL + element + settings + mapboxgl.accessToken;\r\n            const fetchData = async () => {\r\n                try {\r\n                    const resp = await fetch(fetchURL);\r\n                    const data = await resp.json();\r\n                    const coordinates = data.features[0].center\r\n                                    \r\n                    \r\n                    var popup = new mapboxgl.Popup({ offset: 25 })\r\n                        .setMaxWidth(\"300px\")\r\n                        .setText(pubsToShow.current[0].length > 1 ?\r\n                        (index +1) + \". \" + pubsToShow.current[0][index].name : pubsToShow.current[index].name\r\n                        );\r\n            \r\n                    // add the markers\r\n                    new mapboxgl.Marker({\r\n                    color: \"#dc2800\",\r\n                    scale: 1.2,\r\n                    })\r\n                        .setLngLat([coordinates[0], coordinates[1]])\r\n                        .setPopup(popup)\r\n                        .addTo(map.current);\r\n\r\n                } \r\n                // prepare for errors and make room for notification.\r\n                catch (e) {\r\n                    setError(e);\r\n                }\r\n            }\r\n            fetchData();\r\n        })\r\n\r\n        // add navigation control to the map (the +/- zoom buttons and fullscreen)\r\n        map.current.addControl(new mapboxgl.FullscreenControl());\r\n        map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    /* RENDERS */\r\n    return (\r\n        <div>\r\n            {error != null ? \r\n            <Notification></Notification>:\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;","import PubList from '../resources/barList.json';\r\n\r\n\r\n/**\r\n * Helper function to get pubs from the resource JSON file.\r\n * \r\n * @param {string} district \r\n * @param {boolean} isTour \r\n * @returns array of pubs, or just a pub.\r\n */\r\nexport const getPubs = (district, isTour) => {\r\n    const filteredPubs = PubList.filter(pub => pub.category === district)\r\n    if(isTour === true){\r\n        var pubArray = [];\r\n        while(pubArray.length < 5){\r\n          var pubToAdd = filteredPubs[Math.floor(Math.random() * filteredPubs.length)];\r\n          if(!pubArray.includes(pubToAdd)){\r\n            pubArray.push(pubToAdd);\r\n          }\r\n        }\r\n       return pubArray\r\n    }\r\n    else{\r\n        return filteredPubs[Math.floor(Math.random() * filteredPubs.length)];\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function to url-8 encode locations.\r\n * @param {Array} pubsToShow \r\n * @returns coordinates which have been encoded\r\n */\r\nexport const encodeLocations = (pubsToShow) => {\r\n    console.log(pubsToShow)\r\n    var locations = []\r\n    if(pubsToShow[0].length > 1){\r\n        pubsToShow[0].map(pub => \r\n            locations.push(encodeURIComponent(pub.address))\r\n        )\r\n    }\r\n    else{\r\n        locations.push(encodeURIComponent(pubsToShow[0].address))\r\n    }\r\n    return locations\r\n}\r\n\r\n","import React, {useState, useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport PubDialog from './PubDialog';\r\nimport Map from './Map.js'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst PubResults = ({pubsToShow}) => {\r\n    const [mapVisible, setMapVisible] = useState(false)\r\n    const showDialog = useRef(false)\r\n    const pubName = useRef(\"\")\r\n\r\n    const handleDialogChange = (event) => {\r\n        showDialog.current = true\r\n        pubName.current = event.target.textContent;\r\n    }\r\n\r\n    return(\r\n        <div className=\"pub-results\">\r\n            {pubsToShow.current[0].length > 1 ?\r\n            <div className=\"pub-list\">  \r\n            {showDialog && <PubDialog showDialog={showDialog}\r\n                                        pubName={pubName}/>} \r\n                {pubsToShow.current[0].map((pub, ind) => (\r\n                        <div key={pub.name}>\r\n                            <Typography color=\"primary\" \r\n                                        variant=\"h6\" \r\n                                        onClick={handleDialogChange} \r\n                                        className=\"pub-list-name\"\r\n                                        style={{textDecoration: \"underline\",\r\n                                                width: \"400px\",\r\n                                                marginTop: \"-20px\"}}>\r\n                                    {ind +1 }. {pub.name}\r\n                            </Typography>\r\n                            <p>{pub.address}</p>\r\n                        </div>\r\n                    ))}\r\n           </div>\r\n            : \r\n\r\n            <div className=\"pub-onlyone\">\r\n                 {showDialog && <PubDialog showDialog={showDialog}\r\n                                            pubName={pubName}/>} \r\n               <Typography color=\"primary\" \r\n                            variant=\"h5\" \r\n                            onClick={handleDialogChange} \r\n                            className=\"pub-onlyone-name\"\r\n                            style={{textDecoration: \"underline\",\r\n                                    width: \"400px\"}}>\r\n                    {pubsToShow.current[0].name}\r\n                </Typography>\r\n                <Typography variant=\"body2\">{pubsToShow.current[0].address}</Typography>\r\n            </div>\r\n            }\r\n\r\n            {!mapVisible ?\r\n                <Button onClick={() => setMapVisible(!mapVisible)} \r\n                style={{textDecoration: \"underline\",\r\n                        fontSize: \"16px\"}}>\r\n                Näytä kartalla\r\n                </Button>\r\n            : \r\n            <div className=\"map-div\">\r\n                <Map pubsToShow={pubsToShow}/>\r\n                <Button onClick={() => setMapVisible(!mapVisible)}\r\n                        style={{textDecoration: \"underline\"}}>\r\n                        Piilota kartta\r\n                </Button>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default PubResults;","import React, {useState, useEffect, useRef} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PubResults from './PubResults'\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getPubs } from '../helpers/helpers'\r\n  \r\n\r\nconst ButtonPub = ({districtValue}) => {\r\n    const [district, setDistrict] = useState(\"\");\r\n    const [showResults, setShowResults] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const pubsToShow = useRef([]);\r\n    const timer = useRef();\r\n    const tour = useRef();\r\n\r\n    // determine the district and name it. \r\n    // easier filtering on the helper function.\r\n    useEffect(() => {\r\n         if(districtValue === \"1\"){\r\n             setDistrict(\"MainStreet\")\r\n         }\r\n         else if(districtValue === \"2\"){\r\n            setDistrict(\"TamKal\")\r\n        }\r\n        else if(districtValue === \"3\"){\r\n            setDistrict(\"HerWood\")\r\n        }\r\n    }, [districtValue]);\r\n\r\n\r\n    // progressbar movement implementation. \r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((oldProgress) => {\r\n              if (oldProgress === 100) {\r\n                return 0;\r\n              }\r\n              const diff = Math.random() * 10;\r\n              return Math.min(oldProgress + diff, 100);\r\n            });\r\n          }, 200);\r\n\r\n        return () => {\r\n          clearTimeout(timer.current);\r\n        };\r\n      }, []);\r\n\r\n\r\n\r\n\r\n    // function to help the progressbar component.\r\n    function LinearProgressWithLabel(props) {\r\n        return (\r\n            <div className=\"progress-loader\">\r\n            <LinearProgress variant=\"determinate\" {...props}/>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">{`${Math.round(\r\n                props.value,\r\n              )}% lasketaan todennäköisyyksiä...`}\r\n              </Typography>\r\n            </div>\r\n        );\r\n      }\r\n\r\n    // function to handle button clicks\r\n    const handleClick = (event) => {\r\n        window.scrollTo(0, 100);\r\n        if(pubsToShow.current.length > 0){\r\n            pubsToShow.current = []\r\n        }\r\n        setShowResults(false);\r\n\r\n        // determine if the button clicked was\r\n        // the tour one or just one pub.\r\n        const buttonType = event.target.textContent;\r\n        if(buttonType === \"Arvo kapakka\"){\r\n            tour.current = false;\r\n        }\r\n        else{\r\n            tour.current = true;\r\n        }\r\n\r\n        // insert timer when button is clicked.\r\n        // necessary for goecoding API to \r\n        // follow through on the requests.\r\n        if(!loading){\r\n            // get the pubs from the JSON array using helper function.\r\n            const pubList = getPubs(district, tour.current);\r\n            pubsToShow.current.push(pubList);\r\n            setLoading(true);\r\n            setProgress(10);\r\n            timer.current = window.setTimeout(() => {\r\n                setShowResults(true);\r\n                setLoading(false);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /*  RENDERS */ \r\n    if(!showResults && !loading){\r\n        return (\r\n            <div className=\"buttons\">\r\n                <Button variant=\"contained\" className=\"random-pub-tour-button\" onClick={handleClick}>\r\n                    Arvo kapakka\r\n                </Button>\r\n                <Button variant=\"contained\" className=\"random-pub-tour-button\" onClick={handleClick}>\r\n                    Arvo kapakkakierros\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    else if(loading && !showResults){\r\n        return(\r\n            <div className=\"progress-loader\">\r\n                <LinearProgressWithLabel value={progress}/>         \r\n            </div>\r\n        )\r\n    }\r\n\r\n    else{\r\n        return(\r\n            <div className=\"results\">\r\n                <PubResults pubsToShow={pubsToShow}/>\r\n                <div className=\"buttons\">\r\n                <Button variant=\"contained\" className=\"random-pub-tour-button\"onClick={handleClick}>\r\n                        Arvo kapakka\r\n                    </Button>\r\n                    <Button variant=\"contained\" className=\"random-pub-tour-button\"  onClick={handleClick}>\r\n                        Arvo kapakkakierros\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonPub","import React, {useState} from 'react'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport ButtonPub from './ButtonPub'\r\n\r\n\r\nconst SelectDistrict = () => {\r\n    const [selectedDistrict, setDistrict] = useState(\"1\")\r\n\r\n\r\n    /** Handle the select menu change and set the value */\r\n    const handleChange = (event) => {\r\n        const district = event.target.value;\r\n        setDistrict(district)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"select-menu\">\r\n            <FormControl >\r\n                <InputLabel htmlFor=\"district-native-simple\">Valitse alueesi</InputLabel>\r\n                <NativeSelect \r\n                id =\"select\"\r\n                value={selectedDistrict}\r\n                onChange={(e) => handleChange(e)}\r\n                inputProps={{\r\n                    name: 'district',\r\n                    id: 'district-native-simple',\r\n                }}\r\n                >\r\n                    <option value={1}>Hämeenkatu</option>\r\n                    <option value={2}>Tammela & Kaleva</option>\r\n                    <option value={3}>Hervanta</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n            </div>\r\n            <div >\r\n                <ButtonPub districtValue={selectedDistrict}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SelectDistrict","export default __webpack_public_path__ + \"static/media/skyline-tampere.72233d18.png\";","import React from 'react'\r\nimport PubList from '../resources/barList.json'\r\nimport BackgroundImg from '../other/skyline-tampere.png'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n\r\nconst Footer = () => {\r\n\r\n\r\n    // make an array out the pubs filtered by their category.\r\n    // sort the lists aplhabetically.\r\n    const mainStreetPubs = PubList\r\n        .filter(pub => pub.category === \"MainStreet\")\r\n        .sort((pub, pubToCompare) => pub.name.localeCompare(pubToCompare.name))\r\n    const tamKalPubs = PubList\r\n        .filter(pub => pub.category === \"TamKal\")\r\n        .sort((pub, pubToCompare) => pub.name.localeCompare(pubToCompare.name))\r\n    const herwoodPubs = PubList\r\n        .filter(pub=> pub.category === \"HerWood\")\r\n        .sort((pub, pubToCompare) => pub.name.localeCompare(pubToCompare.name))\r\n\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <img src={BackgroundImg} alt=\"Tampere city skyline black charasteristics.\"></img>\r\n            \r\n            <div className=\"footerTexts\">\r\n                <Typography className=\"footer-instructions\"variant=\"body2\">\r\n                    Otathan huomioon, että osa Hämeenkadun kapakoista on myös lähikorttelin alueella olevia kapakoita.\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    Osa kapakoista saattaa olla osittain myös yökerhoja. Generaattori ei tuota pelkkiä yökerhoja tuloksena.\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\"><b>Arvonnassa mukana:</b></Typography>\r\n\r\n                <List className=\"pubs-list-footer\">\r\n\r\n                    <ListSubheader disableSticky={true} color=\"primary\">Hämeenkatu ({mainStreetPubs.length})</ListSubheader>\r\n                \r\n                    \r\n                    {mainStreetPubs.map((pub) => (\r\n                        <ListItem key={pub.name}>\r\n                            <ListItemText disableTypography={true}>{pub.name}</ListItemText>\r\n                        </ListItem>\r\n                    ))}\r\n\r\n                    <ListSubheader disableSticky={true} color=\"primary\">Tammela & Kaleva ({tamKalPubs.length})</ListSubheader>\r\n\r\n                    {tamKalPubs.map((pub) => (\r\n                        <ListItem key={pub.name}>\r\n                            <ListItemText disableTypography={true}>{pub.name}</ListItemText>\r\n                        </ListItem> \r\n                    ))}\r\n\r\n                    <ListSubheader disableSticky={true} color=\"primary\">Hervanta ({herwoodPubs.length})</ListSubheader>\r\n\r\n                    {herwoodPubs.map((pub) => (\r\n                        <ListItem key={pub.name}>\r\n                            <ListItemText disableTypography={true}>{pub.name}</ListItemText>\r\n                        </ListItem> \r\n                    ))}\r\n                </List>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header'\r\nimport SelectDistrict from './components/SelectDistrict';\r\nimport Footer from './components/Footer'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"main\">\r\n        <Header/>\r\n        <SelectDistrict/>\r\n        <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nwindow.React1 = require('react');\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}